version: 2.1

setup: true

orbs:
  continuation: circleci/continuation@1.0.0

jobs:
  setup:
    docker:
      - image: cimg/base:current
    resource_class: medium
    steps:
      - checkout
      - run:
          name: validate CircleCI token
          command: |
            curl -H "Circle-Token: $CIRCLE_TOKEN" https://circleci.com/api/v2/me
      - run:
          name: generate SSH key
          command: |
            ssh-keygen -t ed25519 -C "dummy@example.com" -f throwaway -N ""
      - run:
          name: add SSH key to project
          command: |
            SSH_PRIVATE_KEY_ONELINE=$(awk -v ORS='\\n' '1' throwaway)
            SSH_KEY_HOSTNAME=example.com
            # create JSON payload
            jq --null-input --arg key $SSH_PRIVATE_KEY_ONELINE '.private_key=$key' | jq --arg host $SSH_KEY_HOSTNAME '.hostname=$host' > payload.json

            curl -H "Circle-Token: $CIRCLE_TOKEN" \
              -H "Content-Type: application/json" \
              -X POST \
              -d @payload.json \
              "https://circleci.com/api/v1.1/project/github/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/ssh-key"
      - run:
          name: get fingerprint and make payload for continued config
          command: |
            SSH_KEY_HOSTNAME=example.com
            FINGERPRINT=$(curl -s -H "Circle-Token: $CIRCLE_TOKEN" "https://circleci.com/api/v1.1/project/github/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/settings" | jq -r --arg host $SSH_KEY_HOSTNAME '.ssh_keys| map(select(.hostname == $host)) | .[0].fingerprint')
            
            echo "fingerprint = ${FINGERPRINT}"

            # make JSON payload for continuation
            jq --null-input --arg fingerprint $FINGERPRINT '.fingerprint=$fingerprint' > parameters.json

            # check
            jq '.' parameters.json
      - continuation/continue:
          configuration_path: .circleci/continue.yml
          parameters: ./parameters.json

workflows:
  start:
    jobs:
      - setup